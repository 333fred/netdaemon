#### Build and tests all pushes, also code coverage
name: publish nuget
on:
  push:
    tags:
      - '*'

jobs:
  deploy_nuget:
    name: publish nuget packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-dotnet@v1
      - uses: olegtarasov/get-tag@v2
        name: Set tag envronment variable
      - name: pack DaemonRunner
        run: dotnet pack src/DaemonRunner/DaemonRunner/DaemonRunner.csproj --configuration Release -p:PackageVersion=${GIT_TAG_NAME}-alpha
      - name: pack App
        run: dotnet pack src/App/NetDaemon.App/NetDaemon.App.csproj --configuration Release -p:PackageVersion=${GIT_TAG_NAME}-alpha
      - name: pack Daemon
        run: dotnet pack src/Daemon/NetDaemon.Daemon/NetDaemon.Daemon.csproj --configuration Release -p:PackageVersion=${GIT_TAG_NAME}-alpha
        # uses: rohith/publish-nuget@v2
        # with:
        #   PROJECT_FILE_PATH: src/DaemonRunner/DaemonRunner/DaemonRunner.csproj # Relative to repository root
        #   VERSION_STATIC: ${GIT_TAG_NAME}-alpha
        #   NUGET_KEY: ${{secrets.NUGET_API_KEY}} # nuget.org API key
          # TAG_COMMIT: false # Flag to enable / disalge git tagging
              # VERSION_FILE_PATH: Directory.Build.props # Filepath with version info, relative to repository root. Defaults to project file
              # VERSION_REGEX: <Version>(.*)<\/Version> # Regex pattern to extract version info in a capturing group
              # TAG_FORMAT: v* # Format of the git tag, [*] gets replaced with version
              # PACKAGE_NAME: NuGet package name, required when it's different from project name. Defaults to project name
          # - name: Build code
          #   run: dotnet build
          # - name: Test code
          #   run: dotnet test -v minimal /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:CoverletOutput=${{github.workspace}}/codecover/lcov.info

          # - name: Publish coverage report to coveralls.io
          #   uses: coverallsapp/github-action@master
          #   with:
          #     github-token: ${{ secrets.GITHUB_TOKEN }}
          #     path-to-lcov: ${{github.workspace}}/codecover/lcov.info
